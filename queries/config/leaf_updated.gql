query leaf_config($device: String!) {
  physical: DcimPhysicalDevice(name__value: $device) {
    edges {
      node {
        name {
          value
        }
        device_type {
          node {
            platform {
              node {
                netmiko_device_type {
                  value
                }
              }
            }
            manufacturer {
              node {
                name {
                  value
                }
              }
            }
          }
        }

        device_service {
          count
          edges {
            node {
              __typename
              name {
                value
              }
              ... on ServiceBGP {
                session_type {
                  value
                }
                local_ip {
                  node {
                    address {
                      value
                    }
                  }
                }
                local_as {
                  node {
                    asn {
                      value
                    }
                  }
                }
                remote_ip {
                  node {
                    address {
                      value
                    }
                  }
                }
                remote_as {
                  node {
                    asn {
                      value
                    }
                  }
                }
                router_id {
                  node {
                    address {
                      value
                    }
                  }
                }
                role {
                  value
                }
                status {
                  value
                }
                description {
                  value
                }
                device {
                  node {
                    name {
                      value
                    }
                  }
                }
              }
              ... on ServiceOSPF {
                router_id {
                  node {
                    address {
                      value
                    }
                  }
                }
                area {
                  node {
                    area {
                      value
                    }
                    name {
                      value
                    }
                  }
                }
                version {
                  value
                }
                status {
                  value
                }
                device {
                  node {
                    name {
                      value
                    }
                  }
                }
                ospf_interface {
                  edges {
                    node {
                      name {
                        value
                      }
                      role {
                        value
                      }
                    }
                  }
                }
              }
            }
          }
        }
        interfaces {
          edges {
            node {
              __typename
              name {
                value
              }
              description {
                value
              }
              status {
                value
              }
              role {
                value
              }
              ... on DcimPhysicalInterface {
                connector {
                  node {
                    name {
                      value
                    }
                    device {
                      node {
                        name {
                          value
                        }
                      }
                    }
                  }
                }
                ip_addresses {
                  edges {
                    node {
                      address {
                        value
                      }
                      ip_namespace {
                        node {
                          name {
                            value
                          }
                        }
                      }
                    }
                  }
                }
              }
              ... on DcimVirtualInterface {
                ip_addresses {
                  edges {
                    node {
                      address {
                        value
                      }
                      ip_namespace {
                        node {
                          name {
                            value
                          }
                        }
                      }
                    }
                  }
                }
              }
              service {
                edges {
                  node {
                    __typename
                    ... on ServiceNetworkSegment {
                      name {
                        value
                      }
                      vni {
                        value
                      }
                      status {
                        value
                      }
                      description {
                        value
                      }
                      prefixes {
                        edges {
                          node {
                            prefix {
                              value
                            }
                          }
                        }
                      }
                    }
                    ... on ServiceOSPFArea {
                      area {
                        value
                      }
                      name {
                        value
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  virtual: DcimVirtualDevice(name__value: $device) {
    edges {
      node {
        name {
          value
        }
        device_type {
          node {
            platform {
              node {
                netmiko_device_type {
                  value
                }
              }
            }
            manufacturer {
              node {
                name {
                  value
                }
              }
            }
          }
        }

        device_service {
          count
          edges {
            node {
              __typename
              name {
                value
              }
              ... on ServiceBGP {
                session_type {
                  value
                }
                local_ip {
                  node {
                    address {
                      value
                    }
                  }
                }
                local_as {
                  node {
                    asn {
                      value
                    }
                  }
                }
                remote_ip {
                  node {
                    address {
                      value
                    }
                  }
                }
                remote_as {
                  node {
                    asn {
                      value
                    }
                  }
                }
                router_id {
                  node {
                    address {
                      value
                    }
                  }
                }
                role {
                  value
                }
                status {
                  value
                }
                description {
                  value
                }
              }
              ... on ServiceOSPF {
                router_id {
                  node {
                    address {
                      value
                    }
                  }
                }
                area {
                  node {
                    area {
                      value
                    }
                    name {
                      value
                    }
                  }
                }
                version {
                  value
                }
                status {
                  value
                }
              }
            }
          }
        }
        interfaces {
          edges {
            node {
              __typename
              name {
                value
              }
              description {
                value
              }
              status {
                value
              }
              role {
                value
              }
              ... on DcimVirtualInterface {
                ip_addresses {
                  edges {
                    node {
                      address {
                        value
                      }
                      ip_namespace {
                        node {
                          name {
                            value
                          }
                        }
                      }
                    }
                  }
                }
              }
              service {
                edges {
                  node {
                    __typename
                    ... on ServiceNetworkSegment {
                      name {
                        value
                      }
                      vni {
                        value
                      }
                      status {
                        value
                      }
                      description {
                        value
                      }
                      prefixes {
                        edges {
                          node {
                            prefix {
                              value
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
