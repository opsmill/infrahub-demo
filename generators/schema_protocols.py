#
# Generated by "infrahubctl protocols"
#

from __future__ import annotations

from typing import TYPE_CHECKING

from infrahub_sdk.protocols import (
    BuiltinIPAddress,
    BuiltinIPPrefix,
    CoreArtifactTarget,
    CoreNode,
)

if TYPE_CHECKING:
    from infrahub_sdk.node import RelatedNode, RelationshipManager
    from infrahub_sdk.protocols_base import (
        Boolean,
        BooleanOptional,
        Dropdown,
        DropdownOptional,
        Integer,
        IntegerOptional,
        IPHost,
        IPNetwork,
        String,
        StringOptional,
    )


class TopologyDeployment(CoreNode):
    description: StringOptional
    emulation: Boolean
    name: String
    customer_subnet: RelatedNode
    design: RelatedNode
    devices: RelationshipManager
    location: RelatedNode
    management_subnet: RelatedNode


class DcimEndpoint(CoreNode):
    connector: RelatedNode


class LocationGeneric(CoreNode):
    description: StringOptional
    name: String
    shortname: String
    tags: RelationshipManager


class OrganizationGeneric(CoreNode):
    description: StringOptional
    name: String
    namespaces: RelationshipManager
    tags: RelationshipManager


class ServiceGeneric(CoreNode):
    description: StringOptional
    name: String
    status: Dropdown
    owner: RelatedNode


class SecurityGenericAddress(CoreNode):
    name: String
    address_groups: RelationshipManager


class SecurityGenericAddressGroup(CoreNode):
    description: StringOptional
    name: String
    addresses: RelationshipManager


class DcimGenericDevice(CoreNode):
    description: StringOptional
    name: String
    os_version: StringOptional
    role: DropdownOptional
    status: Dropdown
    interfaces: RelationshipManager
    platform: RelatedNode
    primary_address: RelatedNode
    tags: RelationshipManager


class DcimGenericSFP(CoreNode):
    form_factor: Dropdown
    serial: StringOptional
    sfp_type: Dropdown
    status: Dropdown
    interface: RelatedNode
    manufacturer: RelatedNode
    spare_location: RelatedNode


class SecurityGenericService(CoreNode):
    description: StringOptional
    name: String
    service_groups: RelationshipManager


class SecurityGenericServiceGroup(CoreNode):
    description: StringOptional
    name: String
    services: RelationshipManager


class LocationHosting(CoreNode):
    devices: RelationshipManager
    prefixes: RelationshipManager


class DcimInterface(CoreNode):
    description: StringOptional
    name: String
    role: DropdownOptional
    status: Dropdown
    device: RelatedNode
    tags: RelationshipManager


class NetworkManagementServer(CoreNode):
    description: StringOptional
    name: String
    status: Dropdown
    ip_addresses: RelationshipManager
    location: RelationshipManager


class SecurityPolicyAssignment(CoreNode):
    rules: RelationshipManager


class ServiceRoutingPolicy(CoreNode):
    address_family: Dropdown
    description: StringOptional
    name: String
    policy_type: Dropdown
    weight: IntegerOptional


class DcimSubInterface(CoreNode):
    sub_interfaces: RelationshipManager


class SecurityAddressGroup(SecurityGenericAddressGroup):
    pass


class ServiceAutonomousSystem(ServiceGeneric):
    asn: Integer
    devices: RelationshipManager
    provider: RelatedNode


class ServiceBGPCommunity(CoreNode):
    community: String
    description: StringOptional
    name: String
    routing_policy: RelationshipManager
    tags: RelationshipManager


class ServiceBGPPeerGroup(ServiceGeneric):
    address_family: Dropdown
    local_pref: IntegerOptional
    maximum_routes: IntegerOptional
    send_community: BooleanOptional
    export_routing_policies: RelationshipManager
    import_routing_policies: RelationshipManager
    local_as: RelatedNode
    remote_as: RelatedNode


class ServiceBGPSession(ServiceGeneric):
    local_pref: IntegerOptional
    role: Dropdown
    session_type: String
    device: RelatedNode
    export_routing_policies: RelationshipManager
    import_routing_policies: RelationshipManager
    local_as: RelatedNode
    local_ip: RelatedNode
    peer_group: RelatedNode
    peer_session: RelatedNode
    remote_as: RelatedNode
    remote_ip: RelatedNode


class DcimBidiSFP(DcimGenericSFP):
    wavelength_rx: Integer
    wavelength_tx: Integer


class TopologyBranchOffice(CoreArtifactTarget, TopologyDeployment):
    owner: RelatedNode


class LocationBuilding(LocationGeneric, LocationHosting):
    facility_id: StringOptional
    physical_address: StringOptional
    owner: RelatedNode


class TopologyColocationCenter(CoreArtifactTarget, TopologyDeployment):
    asn: Integer


class DcimConsoleInterface(DcimInterface, DcimEndpoint, CoreArtifactTarget):
    port: Integer
    speed: Integer


class LocationCountry(LocationGeneric):
    timezone: StringOptional


class OrganizationCustomer(OrganizationGeneric):
    pass


class TopologyDataCenter(CoreArtifactTarget, TopologyDeployment):
    strategy: Dropdown
    provider: RelatedNode
    public_subnet: RelatedNode
    technical_subnet: RelatedNode


class DcimDeviceType(CoreNode):
    description: StringOptional
    full_depth: Boolean
    height: Integer
    name: String
    part_number: StringOptional
    weight: IntegerOptional
    manufacturer: RelatedNode
    platform: RelatedNode
    tags: RelationshipManager


class NetworkDhcpOption(CoreNode):
    content: String
    description: StringOptional
    name: String
    option_code: Integer


class NetworkDhcpServer(NetworkManagementServer):
    lease_time: String
    dhcp_options: RelationshipManager


class DesignElement(CoreNode):
    description: StringOptional
    name: String
    quantity: Integer
    role: DropdownOptional
    device_type: RelatedNode
    template: RelatedNode


class SecurityFQDN(SecurityGenericAddress):
    fqdn: String


class LocationFloor(LocationGeneric):
    pass


class SecurityIPAMIPAddress(SecurityGenericAddress):
    description: StringOptional
    ip_address: RelatedNode


class SecurityIPAMIPPrefix(SecurityGenericAddress):
    description: StringOptional
    ip_prefix: RelatedNode


class IpamIPAddress(BuiltinIPAddress):
    fqdn: StringOptional


class SecurityIPAddress(SecurityGenericAddress):
    address: IPHost
    description: StringOptional


class SecurityIPProtocol(SecurityGenericService):
    protocol: IntegerOptional


class SecurityIPRange(SecurityGenericAddress):
    end: IPHost
    start: IPHost


class ServiceLayer2Network(ServiceGeneric):
    vlan: Integer
    interfaces: RelationshipManager


class ServiceLayer3Gateway(ServiceGeneric):
    is_anycast: Boolean
    interfaces: RelationshipManager
    prefix: RelatedNode


class OrganizationManufacturer(CoreNode):
    description: StringOptional
    name: String
    device_type: RelationshipManager
    platform: RelationshipManager


class LocationMetro(LocationGeneric):
    pass


class NetworkNTPServer(NetworkManagementServer):
    pass


class NetworkNameServer(NetworkManagementServer):
    pass


class ServiceOSPF(ServiceGeneric):
    reference_bandwidth: IntegerOptional
    version: Dropdown
    area: RelatedNode
    device: RelatedNode
    export_routing_policies: RelationshipManager
    import_routing_policies: RelationshipManager
    router_id: RelatedNode


class ServiceOSPFArea(ServiceGeneric):
    area: Integer
    namespace: RelatedNode
    ospf_interfaces: RelationshipManager


class ServiceOSPFInterface(ServiceGeneric):
    authentication_key: StringOptional
    authentication_mode: DropdownOptional
    metric: IntegerOptional
    mode: Dropdown
    settings_interfaces: RelationshipManager


class DcimPhysicalDevice(CoreArtifactTarget, DcimGenericDevice):
    position: IntegerOptional
    rack_face: Dropdown
    serial: StringOptional
    device_type: RelatedNode
    location: RelatedNode


class DcimPhysicalInterface(DcimInterface, DcimEndpoint, DcimSubInterface):
    interface_type: Dropdown
    mtu: Integer
    ip_addresses: RelationshipManager


class DcimPlatform(CoreNode):
    ansible_network_os: StringOptional
    containerlab_os: StringOptional
    description: StringOptional
    name: String
    napalm_driver: StringOptional
    netmiko_device_type: StringOptional
    nornir_platform: StringOptional
    devices: RelationshipManager
    manufacturer: RelatedNode


class SecurityPolicy(CoreNode):
    description: StringOptional
    name: String
    location_target: RelatedNode
    rules: RelationshipManager


class SecurityPolicyRule(CoreNode):
    action: String
    index: Integer
    log: BooleanOptional
    name: String
    destination_address: RelationshipManager
    destination_groups: RelationshipManager
    destination_service_groups: RelationshipManager
    destination_services: RelationshipManager
    destination_zone: RelatedNode
    policy: RelatedNode
    source_address: RelationshipManager
    source_groups: RelationshipManager
    source_service_groups: RelationshipManager
    source_services: RelationshipManager
    source_zone: RelatedNode


class IpamPrefix(BuiltinIPPrefix):
    role: DropdownOptional
    status: Dropdown
    gateway: RelatedNode
    location: RelatedNode
    organization: RelatedNode


class SecurityPrefix(SecurityGenericAddress):
    description: StringOptional
    prefix: IPNetwork


class OrganizationProvider(OrganizationGeneric):
    pass


class LocationRack(LocationGeneric, LocationHosting):
    facility_id: StringOptional
    owner: RelatedNode


class LocationRegion(LocationGeneric):
    pass


class SecurityRenderedPolicyRule(CoreNode):
    action: String
    index: Integer
    log: BooleanOptional
    name: String
    destination_address: RelationshipManager
    destination_groups: RelationshipManager
    destination_service_groups: RelationshipManager
    destination_services: RelationshipManager
    destination_zone: RelatedNode
    source_address: RelationshipManager
    source_groups: RelationshipManager
    source_policy: RelatedNode
    source_service_groups: RelationshipManager
    source_services: RelationshipManager
    source_zone: RelatedNode


class ServiceRoutingPolicyBGP(ServiceRoutingPolicy):
    pass


class ServiceRoutingPolicyOSPF(ServiceRoutingPolicy):
    pass


class SecurityService(SecurityGenericService):
    port: Integer
    ip_protocol: RelatedNode


class SecurityServiceGroup(SecurityGenericServiceGroup):
    pass


class SecurityServiceRange(SecurityGenericService):
    end: Integer
    start: Integer
    ip_protocol: RelatedNode


class DcimStandardSFP(DcimGenericSFP):
    pass


class LocationSuite(LocationGeneric):
    facility_id: StringOptional
    owner: RelatedNode


class DesignTopology(CoreArtifactTarget):
    description: StringOptional
    name: String
    type: DropdownOptional
    elements: RelationshipManager


class DcimVirtualDevice(CoreArtifactTarget, DcimGenericDevice):
    hosting_device: RelatedNode


class DcimVirtualInterface(DcimInterface):
    ip_addresses: RelationshipManager
    parent_interface: RelatedNode


class SecurityZone(CoreNode):
    name: String
