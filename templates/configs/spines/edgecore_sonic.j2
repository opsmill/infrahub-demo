{
  "DEVICE_METADATA": {
    "localhost": {
      "hostname": "{{ data.name }}",
      "type": "SpineRouter",
      "bgp_asn": "{{ data.local_asn }}"
    }
  },
  "LOOPBACK_INTERFACE": {
{%- for interface in data.interfaces %}
  {%- if interface.typename == "DcimVirtualInterface" and "loopback" in interface.name.lower() %}
    {%- for ip in interface.ip_addresses %}
    "{{ interface.name }}|{{ ip.address }}": {}{{ "," if not loop.last }}
    {%- endfor %}
  {%- endif %}
{%- endfor %}
  },
  "INTERFACE": {
{%- for interface in data.interfaces %}
  {%- if interface.typename == "DcimPhysicalInterface" and interface.role == "unnumbered" %}
    "{{ interface.name }}": {}{{ "," if not loop.last }}
  {%- endif %}
{%- endfor %}
  },
{# Use enhanced data structures from transforms #}
{%- set bgp_sessions = data.bgp_services or [] %}
{%- set router_id = data.loopback0_ip %}
{%- set underlay_strategy = data.underlay_strategy %}
{%- set is_ospf_underlay = underlay_strategy in ['ospf-ibgp'] %}

  "BGP_NEIGHBOR": {
{%- for bgp_service in bgp_sessions %}
    "{{ bgp_service.remote_ip.split('/')[0] }}": {
      "local_addr": "{{ router_id }}",
      "asn": "{{ bgp_service.remote_as }}",
      "holdtime": "10",
      "keepalive": "3",
      "name": "{{ bgp_service.description }}"
    }{{ "," if not loop.last }}
{%- endfor %}
  },
  "BGP_GLOBALS": {
    "default": {
      "router_id": "{{ router_id }}",
      "local_asn": "{{ data.local_asn }}"
    }
  },
{%- if is_ospf_underlay %}
  "OSPF_ROUTER": {
    "default": {
      "router_id": "{{ router_id }}"
    }
  },
  "OSPF_INTERFACE": {
{%- for interface in data.interfaces %}
  {%- if interface.typename == "DcimPhysicalInterface" and interface.role == "ospf-unnumbered" %}
    "{{ interface.name }}": {
      "area": "{{ data.ospf_area or '0.0.0.0' }}",
      "network": "point-to-point"
    }{{ "," if not loop.last }}
  {%- elif interface.typename == "DcimVirtualInterface" and "loopback" in interface.name.lower() and interface.role == "loopback" %}
    "{{ interface.name }}": {
      "area": "{{ data.ospf_area or '0.0.0.0' }}"
    }{{ "," if not loop.last }}
  {%- endif %}
{%- endfor %}
  },
{%- endif %}
  "BGP_PEER_GROUP": {
    "UNDERLAY": {
      "asn": "{{ data.local_asn }}"
    },
    "EVPN_OVERLAY": {
      "asn": "{{ data.local_asn }}"
    }
  },
  "BGP_NEIGHBOR_AF": {
{%- for bgp_service in bgp_sessions %}
  {%- if bgp_service.session_type == "EXTERNAL" %}
    "{{ bgp_service.remote_ip.split('/')[0] }}|ipv4_unicast": {
      "admin_status": "up"
    }{{ "," if not loop.last }}
  {%- elif bgp_service.session_type == "INTERNAL" %}
    "{{ bgp_service.remote_ip.split('/')[0] }}|l2vpn_evpn": {
      "admin_status": "up",
      "route_reflector_client": "true"
    }{{ "," if not loop.last }}
  {%- endif %}
{%- endfor %}
  }
}
