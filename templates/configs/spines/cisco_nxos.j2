!
! Cisco NX-OS VXLAN/EVPN Spine Configuration
! Device: {{ data.name }}
! Generated for {{ data.device_type.manufacturer.name }} {{ data.device_type.platform.netmiko_device_type }}
!

hostname {{ data.name }}

! Enable required features
feature ospf
feature bgp
feature pim
nv overlay evpn

{%- set bgp_sessions = [] %}
{%- set ospf_sessions = [] %}
{%- set router_id = None %}
{%- set local_asn = None %}
{%- set is_ebgp_underlay = false %}
{%- set is_ospf_underlay = false %}

{%- for service in data.device_service %}
  {%- if service.typename == "ServiceBGP" %}
    {%- set bgp_sessions = bgp_sessions + [service] %}
    {%- if service.session_type == "EXTERNAL" %}
      {%- set is_ebgp_underlay = true %}
    {%- endif %}
    {%- if not local_asn and service.local_as %}
      {%- set local_asn = service.local_as.asn %}
    {%- endif %}
    {%- if not router_id and service.router_id %}
      {%- set router_id = service.router_id.address %}
    {%- endif %}
  {%- elif service.typename == "ServiceOSPF" %}
    {%- set ospf_sessions = ospf_sessions + [service] %}
    {%- set is_ospf_underlay = true %}
    {%- if not router_id and service.router_id %}
      {%- set router_id = service.router_id.address %}
    {%- endif %}
  {%- endif %}
{%- endfor %}

! Configure loopback interfaces
{%- for interface in data.interfaces %}
  {%- if interface.typename == "DcimVirtualInterface" and "loopback" in interface.name.lower() %}
interface {{ interface.name }}
  description {{ interface.description if interface.description else "Router ID" }}
    {%- for ip in interface.ip_addresses %}
  ip address {{ ip.address }}
    {%- endfor %}
    {%- if is_ospf_underlay and interface.role == "loopback" %}
  ip router ospf 1 area 0.0.0.0
    {%- endif %}
  ip pim sparse-mode

  {%- endif %}
{%- endfor %}

{%- if is_ospf_underlay %}
! Configure OSPF
router ospf 1
  {%- for service in ospf_sessions %}
    {%- if service.router_id %}
  router-id {{ service.router_id.address.split('/')[0] }}
    {%- endif %}
  {%- endfor %}

{%- endif %}

! Configure underlay interfaces
{%- for interface in data.interfaces %}
  {%- if interface.typename == "DcimPhysicalInterface" and interface.role in ["ospf-unnumbered", "core"] %}
interface {{ interface.name }}
  description {{ interface.description if interface.description else "Underlay connection" }}
  no shutdown
  mtu 9216
    {%- if interface.role == "ospf-unnumbered" %}
  medium p2p
  ip unnumbered loopback0
      {%- if is_ospf_underlay %}
  ip router ospf 1 area 0.0.0.0
      {%- endif %}
    {%- elif interface.role == "core" and interface.ip_addresses %}
      {%- for ip in interface.ip_addresses %}
  ip address {{ ip.address }}
      {%- endfor %}
    {%- endif %}
  ip pim sparse-mode

  {%- endif %}
{%- endfor %}

! Configure BGP
router bgp {{ local_asn }}
  router-id {{ router_id.split('/')[0] if router_id else "1.1.1.1" }}
  bestpath as-path multipath-relax
  reconnect-interval 12
  address-family ipv4 unicast
    redistribute direct route-map rm-connected
    maximum-paths 64
  address-family l2vpn evpn
    nexthop route-map rm-nexthop-unchanged
    retain route-target all

{%- for service in bgp_sessions %}
  {%- if service.session_type == "EXTERNAL" %}
  ! eBGP Underlay neighbor {{ service.remote_as.asn }}
  neighbor {{ service.remote_ip.address.split('/')[0] if service.remote_ip else service.name }}
    {%- if service.remote_ip %}
    remote-as {{ service.remote_as.asn }}
    update-source {{ service.local_ip.address.split('/')[0] }}
    {%- else %}
    remote-as {{ service.remote_as.asn }}
    update-source loopback0
    {%- endif %}
    address-family ipv4 unicast
  {%- elif service.session_type == "INTERNAL" and "evpn" in service.name.lower() %}
  ! iBGP EVPN Route Reflector client
  neighbor {{ service.remote_ip.address.split('/')[0] }}
    remote-as {{ service.remote_as.asn }}
    update-source loopback0
    address-family l2vpn evpn
      send-community extended
      route-reflector-client
  {%- elif service.session_type == "INTERNAL" %}
  ! iBGP neighbor
  neighbor {{ service.remote_ip.address.split('/')[0] }}
    remote-as {{ service.remote_as.asn }}
    update-source loopback0
    address-family ipv4 unicast
  {%- endif %}
{%- endfor %}

! Configure route-maps
route-map rm-connected permit 10
  match interface loopback0

route-map rm-nexthop-unchanged permit 10
  set ip next-hop unchanged

! Configure PIM
ip pim rp-address 10.254.254.254 group-list 224.0.0.0/4
ip pim ssm range 232.0.0.0/8

! End of configuration
