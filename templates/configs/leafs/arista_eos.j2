!
! Arista EOS VXLAN/EVPN Leaf Configuration with Security
! Device: {{ data.name }}
! Generated for {{ data.device_type.manufacturer.name }} {{ data.device_type.platform.netmiko_device_type }}
!

hostname {{ data.name }}

! Configure spanning tree mode
spanning-tree mode mstp

! Configure VLAN 1
no spanning-tree vlan-id 4094

{# Use enhanced data structures from transforms #}
{%- set bgp_sessions = data.bgp_services or [] %}
{%- set router_id = data.loopback0_ip %}
{%- set local_asn = data.local_asn %}
{%- set vtep_source_ip = data.vtep_source_ip %}
{%- set underlay_strategy = data.underlay_strategy %}
{%- set is_ospf_underlay = underlay_strategy in ['ospf-ibgp'] %}
{%- set is_ebgp_underlay = underlay_strategy in ['ebgp-ibgp', 'ebgp-only'] %}

! Configure VRFs for tenant traffic
{%- for vrf_name, vrf in data.vrfs.items() %}
vrf instance {{ vrf_name }}

{%- endfor %}

! Configure loopback interfaces
{%- for interface in data.interfaces %}
  {%- if interface.typename == "DcimVirtualInterface" and "loopback" in interface.name.lower() %}
interface {{ interface.name }}
   description {{ interface.description if interface.description else "Router ID / VTEP IP" }}
    {%- for ip in interface.ip_addresses %}
   ip address {{ ip.address }}
    {%- endfor %}
    {%- if is_ospf_underlay and interface.name.lower() == "loopback0" %}
   ospf area {{ data.ospf_area or "0.0.0.0" }}
    {%- endif %}

  {%- endif %}
{%- endfor %}

{%- if is_ospf_underlay %}
! Configure OSPF
router ospf 1
   router-id {{ router_id }}
   passive-interface default
   no passive-interface Ethernet1
   no passive-interface Ethernet2
   max-lsa 12000

{%- endif %}

! Configure underlay interfaces
{%- for interface in data.interfaces %}
  {%- if interface.typename == "DcimPhysicalInterface" and interface.role == "ospf-unnumbered" %}
interface {{ interface.name }}
   description {{ interface.description if interface.description else "Underlay connection" }}
   mtu 9214
   no switchport
   ip unnumbered Loopback0
      {%- if is_ospf_underlay %}
   ospf area {{ data.ospf_area or "0.0.0.0" }}
   ospf network point-to-point
      {%- endif %}

  {%- endif %}
{%- endfor %}

! Configure VXLAN interface
interface Vxlan1
   description VXLAN Tunnel Interface
   vxlan source-interface Loopback1
   vxlan udp-port 4789

{# Use fabric segments from enhanced transform #}
{%- set vlan_services = data.fabric.vxlan_service.segments or [] %}

{%- if vlan_services %}
{%- for segment in vlan_services %}
   vxlan vlan {{ segment.vlan_id }} vni {{ segment.vni }}
{%- endfor %}
{%- for vrf_name, vrf in data.vrfs.items() %}
   vxlan vrf {{ vrf_name }} vni {{ vrf.l3vni }}
{%- endfor %}

! Configure VLANs
{%- for segment in vlan_services %}
vlan {{ segment.vlan_id }}
   name {{ segment.name }}

{%- endfor %}

! Configure VLAN interfaces (L3 gateways)
{%- for segment in vlan_services %}
  {%- set segment_vrf = None %}
  {%- for vrf_name, vrf in data.vrfs.items() %}
    {%- if segment.customer.name == vrf.customer %}
      {%- set segment_vrf = vrf %}
    {%- endif %}
  {%- endfor %}
interface Vlan{{ segment.vlan_id }}
   description {{ segment.name }} Gateway
   vrf {{ segment_vrf.name if segment_vrf else segment.customer.name + '_VRF' }}
   ip address virtual 192.168.{{ loop.index }}.1/24

{%- endfor %}

! Configure L3VNI SVIs
{%- for vrf_name, vrf in data.vrfs.items() %}
interface Vlan{{ vrf.l3vni }}
   description {{ vrf_name }} L3VNI
   vrf {{ vrf_name }}

{%- endfor %}

interface Vlan4094
   description MLAG Peer Link
   no autostate
   ip address {{ data.dynamic_config.mlag_peer_ip | default("169.254.254.1/30") }}

{%- endif %}

! Configure BGP
router bgp {{ local_asn }}
   router-id {{ router_id }}
   no bgp default ipv4-unicast
   distance bgp 20 200 200
   maximum-paths 4 ecmp 64

{# Configure BGP neighbors from enhanced transform data #}
{%- for bgp_service in bgp_sessions %}
  {%- if bgp_service.session_type == "EXTERNAL" %}
   ! {{ bgp_service.description }}
   neighbor {{ bgp_service.remote_ip.split('/')[0] }} remote-as {{ bgp_service.remote_as }}
   neighbor {{ bgp_service.remote_ip.split('/')[0] }} update-source Loopback0
   neighbor {{ bgp_service.remote_ip.split('/')[0] }} description {{ bgp_service.description }}
   neighbor {{ bgp_service.remote_ip.split('/')[0] }} send-community
   neighbor {{ bgp_service.remote_ip.split('/')[0] }} maximum-routes 0
  {%- elif bgp_service.session_type == "INTERNAL" %}
   ! {{ bgp_service.description }}
   neighbor {{ bgp_service.remote_ip.split('/')[0] }} remote-as {{ bgp_service.remote_as }}
   neighbor {{ bgp_service.remote_ip.split('/')[0] }} update-source Loopback0
   neighbor {{ bgp_service.remote_ip.split('/')[0] }} description {{ bgp_service.description }}
   neighbor {{ bgp_service.remote_ip.split('/')[0] }} send-community extended
   neighbor {{ bgp_service.remote_ip.split('/')[0] }} maximum-routes 0
  {%- endif %}
{%- endfor %}

   address-family ipv4
      redistribute connected route-map RM-CONN-2-BGP
{%- for bgp_service in bgp_sessions %}
  {%- if bgp_service.session_type == "EXTERNAL" %}
      neighbor {{ bgp_service.remote_ip.split('/')[0] }} activate
  {%- endif %}
{%- endfor %}

   address-family evpn
{%- for bgp_service in bgp_sessions %}
  {%- if bgp_service.session_type == "INTERNAL" %}
      neighbor {{ bgp_service.remote_ip.split('/')[0] }} activate
  {%- endif %}
{%- endfor %}

{# VRF Address Families for L3VPN #}
{%- for vrf_name, vrf in data.vrfs.items() %}
   vrf {{ vrf_name }}
      rd {{ vrf.rd }}
      route-target import evpn {{ vrf.rt_import[0] }}
      route-target export evpn {{ vrf.rt_export[0] }}
      redistribute connected

{%- endfor %}

{# L2VPN EVPN for VLANs #}
{%- for segment in vlan_services %}
   vlan {{ segment.vlan_id }}
      rd {{ router_id }}:{{ segment.vni }}
      route-target both {{ segment.vni }}:{{ segment.vni }}
      redistribute learned

{%- endfor %}

! Configure route-maps
route-map RM-CONN-2-BGP permit 10
   match interface Loopback0
route-map RM-CONN-2-BGP permit 20
   match interface Loopback1

{%- if vlan_services | length > 0 %}

! Virtual MAC for anycast gateway
ip virtual-router mac-address 00:1c:73:00:00:99

{%- endif %}

! End of configuration
