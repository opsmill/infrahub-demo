{
  "DEVICE_METADATA": {
    "localhost": {
      "hostname": "{{ data.name }}",
      "type": "{{ data.dynamic_config.device_role | title }}Router",
{%- set local_asn = None %}
{%- for service in data.device_service %}
  {%- if service.typename == "ServiceBGP" and service.local_as %}
    {%- set local_asn = service.local_as.asn %}
  {%- endif %}
{%- endfor %}
      "bgp_asn": "{{ local_asn if local_asn else data.dynamic_config.default_asn | default('65001') }}"
    }
  },
  "LOOPBACK_INTERFACE": {
{%- for interface in data.interfaces %}
  {%- if interface.typename == "DcimVirtualInterface" and "loopback" in interface.name.lower() %}
    {%- for ip in interface.ip_addresses %}
    "{{ interface.name }}|{{ ip.address }}": {}{{ "," if not loop.last }}
    {%- endfor %}
  {%- endif %}
{%- endfor %}
  },
  "INTERFACE": {
{%- for interface in data.interfaces %}
  {%- if interface.typename == "DcimPhysicalInterface" and interface.role in ["ospf-unnumbered", "core"] %}
    {%- if interface.ip_addresses %}
      {%- for ip in interface.ip_addresses %}
    "{{ interface.name }}|{{ ip.address }}": {}{{ "," if not loop.last }}
      {%- endfor %}
    {%- else %}
    "{{ interface.name }}": {}{{ "," if not loop.last }}
    {%- endif %}
  {%- endif %}
{%- endfor %}
  },
{%- set vlan_services = data.network_segments or [] %}
{%- if vlan_services | length > 0 %}
 "VLAN": {
{%- for service in vlan_services %}
   "Vlan{{ service.vni }}": {
     "vlanid": "{{ service.vni }}",
     "description": "Multi-tenant VLAN for {{ service.name }}{% if service.security_zone %} - Security Zone: {{ service.security_zone.name }}{% endif %}"
   }{{ "," if not loop.last }}
{%- endfor %}
 },
  "VLAN_INTERFACE": {
{%- for service in vlan_services %}
  {%- set service_vrf = None %}
  {%- for vrf in data.customer_vrfs %}
    {%- for segment in vrf.segments %}
      {%- if segment.name == service.name %}
        {%- set service_vrf = vrf %}
      {%- endif %}
    {%- endfor %}
  {%- endfor %}
    "Vlan{{ service.vni }}": {
      "vrf_name": "{{ service_vrf.name if service_vrf else (service.name | replace(' ', '_') | replace('-', '_')) + '_VRF' }}"
    }{{ "," if not loop.last }}
{%- endfor %}
  },
  "VRF": {
{%- for vrf in data.customer_vrfs %}
    "{{ vrf.name }}": {
      "vni": "{{ vrf.vni }}"
    }{{ "," if not loop.last }}
{%- endfor %}
  },
  "VXLAN_TUNNEL": {
    "vtep1": {
      "src_ip": "{{ data.dynamic_config.vtep_source_ip }}"
    }
  },
  "VXLAN_TUNNEL_MAP": {
{%- for service in vlan_services %}
    "vtep1|map_{{ service.vni }}_Vlan{{ service.vni }}": {
      "vlan": "Vlan{{ service.vni }}",
      "vni": "{{ service.vni }}"
    }{{ "," if not loop.last }}
{%- endfor %}
  },
{%- else %}
  "VRF": {
    "default_tenant_VRF": {
      "vni": "{{ data.dynamic_config.default_tenant_vni }}"
    }
  },
{%- endif %}
{%- set ns = namespace(router_id=None, bgp_sessions=[], ospf_sessions=[], is_ebgp_underlay=false, is_ospf_underlay=false) %}

{%- for service in data.device_service %}
  {%- if service.typename == "ServiceBGP" %}
    {%- set ns.bgp_sessions = ns.bgp_sessions + [service] %}
    {%- if service.session_type == "EXTERNAL" %}
      {%- set ns.is_ebgp_underlay = true %}
    {%- endif %}
    {%- if not ns.router_id and service.router_id %}
      {%- set ns.router_id = service.router_id.address %}
    {%- endif %}
  {%- elif service.typename == "ServiceOSPF" %}
    {%- set ns.ospf_sessions = ns.ospf_sessions + [service] %}
    {%- set ns.is_ospf_underlay = true %}
    {%- if not ns.router_id and service.router_id %}
      {%- set ns.router_id = service.router_id.address %}
    {%- endif %}
  {%- endif %}
{%- endfor %}
  "BGP_NEIGHBOR": {
{%- for service in ns.bgp_sessions %}
  {%- if service.remote_ip %}
    "{{ service.remote_ip.address.split('/')[0] }}": {
      "local_addr": "{{ service.local_ip.address.split('/')[0] if service.local_ip else ns.router_id.split('/')[0] }}",
      "asn": "{{ service.remote_as.asn }}",
      "holdtime": "10",
      "keepalive": "3"
    }{{ "," if not loop.last }}
  {%- endif %}
{%- endfor %}
  },
  "BGP_GLOBALS": {
    "default": {
      "router_id": "{{ ns.router_id.split('/')[0] if ns.router_id else data.dynamic_config.router_id }}",
      "local_asn": "{{ local_asn if local_asn else data.dynamic_config.default_asn | default('65001') }}"
    }
  },
{%- if ns.is_ospf_underlay %}
  "OSPF_ROUTER": {
    "default": {
      "router_id": "{{ ns.router_id.split('/')[0] if ns.router_id else data.dynamic_config.router_id }}"
    }
  },
  "OSPF_INTERFACE": {
{%- for interface in data.interfaces %}
  {%- if interface.typename == "DcimPhysicalInterface" and interface.role == "ospf-unnumbered" %}
    "{{ interface.name }}": {
      "area": "{{ data.dynamic_config.ospf_area }}",
      "network": "point-to-point"
    }{{ "," if not loop.last }}
  {%- elif interface.typename == "DcimVirtualInterface" and "loopback" in interface.name.lower() and interface.role == "loopback" %}
    "{{ interface.name }}": {
      "area": "{{ data.dynamic_config.ospf_area }}"
    }{{ "," if not loop.last }}
  {%- endif %}
{%- endfor %}
  },
{%- endif %}
  "BGP_PEER_GROUP": {
    "UNDERLAY": {
      "asn": "{{ local_asn if local_asn else data.dynamic_config.default_asn | default('65001') }}"
    },
    "EVPN_OVERLAY": {
      "asn": "{{ local_asn if local_asn else data.dynamic_config.default_asn | default('65001') }}"
    }
  },
  "BGP_NEIGHBOR_AF": {
{%- for service in ns.bgp_sessions %}
  {%- if service.remote_ip %}
    "{{ service.remote_ip.address.split('/')[0] }}|ipv4_unicast": {
      "admin_status": "up"
    }{{ "," if not loop.last }}
  {%- endif %}
{%- endfor %}
  }{% if vlan_services | length > 0 %},
  "ACL_TABLE": {
{%- for service in vlan_services %}
  {%- if service.access_control_lists %}
    {%- for acl in service.access_control_lists %}
    "{{ acl.name }}": {
      "type": "L3",
      "stage": "{% if 'INGRESS' in acl.name %}ingress{% else %}egress{% endif %}",
      "ports": ["Vlan{{ service.vni }}"]
    }{{ "," if not (loop.last and loop.outer.last) }}
    {%- endfor %}
  {%- endif %}
{%- endfor %}
  },
  "ACL_RULE": {
{%- for service in vlan_services %}
  {%- if service.access_control_lists %}
    {%- for acl in service.access_control_lists %}
      {%- if acl.rules %}
        {%- for rule in acl.rules %}
    "{{ acl.name }}|RULE_{{ rule.index }}": {
      "PRIORITY": "{{ 1000 - rule.index }}",
      "PACKET_ACTION": "{% if rule.action == 'permit' %}ACCEPT{% else %}DROP{% endif %}",
      {%- if rule.source_addresses %}
      "SRC_IP": "{{ rule.source_addresses[0].name if rule.source_addresses[0].name else 'any' }}",
      {%- endif %}
      {%- if rule.destination_addresses %}
      "DST_IP": "{{ rule.destination_addresses[0].name if rule.destination_addresses[0].name else 'any' }}",
      {%- endif %}
      {%- if rule.services %}
      "L4_DST_PORT": "{{ rule.services[0].name }}",
      {%- endif %}
      "IP_PROTOCOL": "{% if rule.services and 'tcp' in rule.services[0].name.lower() %}6{% elif rule.services and 'udp' in rule.services[0].name.lower() %}17{% else %}255{% endif %}"
    }{{ "," if not (loop.last and loop.outer.last and loop.outermost.last) }}
        {%- endfor %}
      {%- endif %}
    {%- endfor %}
  {%- endif %}
{%- endfor %}
  },
  "DHCP_SNOOPING": {
{%- for service in vlan_services %}
  {%- if service.security_profile and service.security_profile.enable_dhcp_snooping %}
    "{{ service.name }}": {
      "state": "enabled",
      "vlan": "Vlan{{ service.vni }}"
    }{{ "," if not loop.last }}
  {%- endif %}
{%- endfor %}
  },
  "ARP_INSPECTION": {
{%- for service in vlan_services %}
  {%- if service.security_profile and service.security_profile.enable_arp_inspection %}
    "{{ service.name }}": {
      "state": "enabled",
      "vlan": "Vlan{{ service.vni }}"
    }{{ "," if not loop.last }}
  {%- endif %}
{%- endfor %}
  },
  "STORM_CONTROL": {
{%- for service in vlan_services %}
  {%- if service.security_profile and service.security_profile.max_mac_addresses %}
    "{{ service.name }}": {
      "broadcast_rate": "100",
      "multicast_rate": "100",
      "unknown_unicast_rate": "100",
      "interface": "Vlan{{ service.vni }}"
    }{{ "," if not loop.last }}
  {%- endif %}
{%- endfor %}
  },
  "LOGGING": {
{%- for service in vlan_services %}
  {%- if service.enable_logging %}
    "{{ service.name }}_LOG": {
      "facility": "local0",
      "level": "info",
      "remote_host": "10.0.1.100"
    }{{ "," if not loop.last }}
  {%- endif %}
{%- endfor %}
  }{% endif %}
}
      {%- if vxlan_services and vxlan_services[0].vtep_source_interface %}
      "src_ip": "{{ vxlan_services[0].vtep_source_interface.ip_addresses[0].address.split('/')[0] }}"
      {%- else %}
      "src_ip": "{{ data.dynamic_config.vtep_source_ip }}"
      {%- endif %}
    }
  },
  "VXLAN_TUNNEL_MAP": {
{%- for vxlan_service in vxlan_services %}
    "vtep1|{{ vxlan_service.vni }}|Vlan{{ vxlan_service.vni }}": {
      "vlan": "Vlan{{ vxlan_service.vni }}",
      "vni": "{{ vxlan_service.vni }}"
    }{{ "," if not loop.last }}
{%- endfor %}
  },
  "VXLAN_EVPN_NVO": {
    "nvo1": {
      "source_vtep": "vtep1"
    }
  },
  "BGP_NEIGHBOR": {
{%- for bgp_service in bgp_services %}
  {%- if bgp_service.session_type == "INTERNAL" %}
    "{{ bgp_service.remote_ip.address.split('/')[0] }}": {
      "asn": "{{ bgp_service.remote_as.asn }}",
      "holdtime": "9",
      "keepalive": "3",
      "name": "{{ bgp_service.remote_ip.address.split('/')[0] }}",
      "rrclient": "0"
    }{{ "," if not loop.last }}
  {%- endif %}
{%- endfor %}
  },
  "BGP_GLOBALS": {
    "default": {
      "router_id": "{{ loopback0_ip }}",
      "local_asn": "{{ local_asn }}"
    }
  },
  "PORT": {
{%- for interface in interfaces %}
  {%- if interface.name.startswith("Ethernet") %}
    "{{ interface.name }}": {
      "speed": "10000",
      "alias": "{{ interface.description or interface.name }}"
    }{{ "," if not loop.last }}
  {%- endif %}
{%- endfor %}
  }
}
