{% for topology in data.TopologyDeployment.edges %}
---
name: {{ topology.node.name.value }}
prefix: ""

mgmt:
  network: {{ topology.node.name.value | lower() }}
  ipv4-subnet: {{ topology.node.management_subnet.node.prefix.value }}

{% if topology.node.devices.edges is defined %} 
topology: 
  nodes:
    {% for device in topology.node.devices.edges %}
    {{ device.node.name.value }}:
      kind: {{ device.node.platform.node.containerlab_os.value }}
      type: {{ device.node.device_type.node.name.value }}
      image: {{ device.node.os_version.value }}
      {% if device.node.primary_address.node.address is defined %}
      management:
        ipv4: {{ device.node.primary_address.node.address.value }}
      {% endif %}
    {% endfor %}

  links:
    {% set processed_endpoints = [] %}
    {% for device in topology.node.devices.edges %}
      {% for interface in device.node.interfaces.edges %}
        {% if interface.node.connector is defined and interface.node.connector.node is not none and interface.node.role.value not in ["console", "management"] %}
          {% set connected_endpoint = interface.node.connector.node %}
          {% set endpoint1 = device.node.name.value + ":" + interface.node.name.value %}
          {% set endpoint2 = connected_endpoint.hfid | join(":") %}
          {% set endpoint_tuple = [endpoint1, endpoint2] | sort %}
          {% set endpoint_key = endpoint_tuple | join("|") %}
          {% if endpoint_key not in processed_endpoints %}
            {% set _ = processed_endpoints.append(endpoint_key) %}
            {% set endpoint1 = endpoint1.replace("Ethernet", "eth") %}
            {% set endpoint2 = endpoint2.replace("Ethernet", "eth") %}
    - endpoints: ["{{ endpoint1 }}", "{{ endpoint2 }}"]
          {% endif %}
        {% endif %}
      {% endfor %}
    {% endfor %}
{% endif %}
{% endfor %}