---
# yaml-language-server: $schema=https://schema.infrahub.app/infrahub/schema/latest.json
version: "1.0"

nodes:
  - name: VIP
    namespace: Service
    description: A load balancer that distributes network traffic via Virtual IPs (VIPs) to frontend servers.
    label: "VIP Service"
    icon: carbon:floating-ip
    include_in_menu: false
    inherit_from:
      - ServiceDeviceGeneric
    attributes:
      - name: name
        kind: Text
        computed_attribute:
          kind: Jinja2
          jinja2_template: "{{ hostname__value}} - {{ vip_ip__address__value }}"
        read_only: true
        optional: false
        unique: true
      - name: hostname
        kind: Text
        unique: true
        description: The unique identifier for the VIP.
        # https://stackoverflow.com/questions/11809631/fully-qualified-domain-name-validation
        regex: "(?=^.{1,253}$)(^(((?!-)[a-zA-Z0-9-]{1,63}(?<!-))|((?!-)[a-zA-Z0-9-]{1,63}(?<!-)\\.)+[a-zA-Z]{2,63})$)"
        order_weight: 11
      - name: description
        kind: Text
        order_weight: 12
        description: A brief description of the VIP.
      - name: mode
        kind: Dropdown
        order_weight: 15
        description: The mode in which HAProxy operates for this VIP (HTTP or TCP).
        choices:
          - name: http
            label: HTTP Mode
            description: Layer 7 HTTP mode.
            color: "#A9DFBF"  # light pastel green
          - name: tcp
            label: TCP Mode
            description: Layer 4 TCP mode.
            color: "#A9CCE3"  # pastel blue
      - name: balance
        kind: Dropdown
        description: The load balancing algorithm to use for this VIP.
        order_weight: 17
        choices:
          - name: roundrobin
            label: Round Robin
            description: Distributes traffic evenly across all available frontends.
            color: "#A9CCE3"  # pastel blue
          - name: leastconn
            label: Least Connections
            description: Sends traffic to the frontend with the fewest connections.
            color: "#A9DFBF"  # light pastel green
          - name: source
            label: Source IP Hash
            description: Ensures requests from the same source IP are always sent to the same frontend.
            color: "#D2B4DE"  # pastel purple
          - name: first
            label: First Available
            description: Sends all traffic to the first available frontend in the server list.
            color: "#AFC7F2"  # pastel cornflower blue
          - name: static-rr
            label: Static Round Robin
            description: Distributes traffic based on a static round-robin algorithm.
            color: "#CDEACC"  # slightly darker pastel green
          - name: uri
            label: URI Hash
            description: Balances traffic based on the hash of the request URI.
            color: "#C9A9E3"  # pastel violet
          - name: hdr
            label: Header Hash
            description: Balances traffic based on the value of a specified HTTP header.
            color: "#D8E4BC"  # pastel greenish-yellow
          - name: random
            label: Random
            description: Balances traffic randomly across available frontends.
            color: "#CDEACC"  # slightly darker pastel green
        default_value: roundrobin
      - name: ssl_certificate
        kind: Text
        description: The name to the SSL certificate for this VIP. This will be used to enable HTTPS.
        optional: true
        order_weight: 19
    relationships:
      - name: vip_ip
        peer: IpamIPAddress
        identifier: vip_service__ip
        cardinality: one
        kind: Attribute
        description: The IP address for this VIP service.
        order_weight: 22
        on_delete: no-action
      - name: frontend_servers
        peer: DcimGenericDevice
        optional: false
        cardinality: many
        kind: Component
        identifier: device_service
        on_delete: no-action
        order_weight: 1000
      - name: backend_servers
        peer: LoadbalancerServer
        identifier: vip__backend_servers
        cardinality: many
        kind: Generic
        description: The list of backend servers that the VIP service forwards traffic to.
        order_weight: 1100
        on_delete: no-action
      - name: health_checks
        peer: LoadbalancerHealthCheck
        identifier: vip__health_checks
        cardinality: many
        kind: Generic
        description: The list of health checks associated with the VIP service.
        order_weight: 1200
        on_delete: no-action
extensions:
  nodes:
    - kind: LoadbalancerServer
      relationships:
        - name: virtual_ips
          label: Virtual IPs
          kind: Component
          cardinality: many
          optional: true
          peer: ServiceVIP
          order_weight: 2000
          identifier: vip__backend_servers
    - kind: LoadbalancerHealthCheck
      relationships:
        - name: health_checks
          label: Health Checks
          kind: Component
          cardinality: many
          optional: true
          peer: ServiceVIP
          order_weight: 2000
          identifier: vip__health_checks
