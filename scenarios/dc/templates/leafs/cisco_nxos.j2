!
! Cisco NX-OS VXLAN/EVPN Leaf Configuration with Security
! Device: {{ data.name }}
! Generated for {{ data.device_type.manufacturer.name }} {{ data.device_type.platform.netmiko_device_type }}
!

hostname {{ data.name }}

! Enable required features
feature ospf
feature bgp
feature pim
feature interface-vlan
feature vn-segment-vlan-based
feature nv overlay
feature dhcp
nv overlay evpn

{%- set bgp_sessions = [] %}
{%- set ospf_sessions = [] %}
{%- set router_id = None %}
{%- set local_asn = None %}
{%- set is_ebgp_underlay = false %}
{%- set is_ospf_underlay = false %}

{%- for service in data.device_service %}
  {%- if service.typename == "ServiceBGP" %}
    {%- set bgp_sessions = bgp_sessions + [service] %}
    {%- if service.session_type == "EXTERNAL" %}
      {%- set is_ebgp_underlay = true %}
    {%- endif %}
    {%- if not local_asn and service.local_as %}
      {%- set local_asn = service.local_as.asn %}
    {%- endif %}
    {%- if not router_id and service.router_id %}
      {%- set router_id = service.router_id.address %}
    {%- endif %}
  {%- elif service.typename == "ServiceOSPF" %}
    {%- set ospf_sessions = ospf_sessions + [service] %}
    {%- set is_ospf_underlay = true %}
    {%- if not router_id and service.router_id %}
      {%- set router_id = service.router_id.address %}
    {%- endif %}
  {%- endif %}
{%- endfor %}

! Configure VRFs for tenant traffic
{%- for vrf in data.customer_vrfs %}
vrf context {{ vrf.name }}
  vni {{ vrf.vni }}
  rd auto
  address-family ipv4 unicast
    route-target both auto
    route-target both auto evpn

{%- endfor %}

! Configure loopback interfaces
{%- for interface in data.interfaces %}
  {%- if interface.typename == "DcimVirtualInterface" and "loopback" in interface.name.lower() %}
interface {{ interface.name }}
  description {{ interface.description if interface.description else "Router ID / VTEP IP" }}
    {%- for ip in interface.ip_addresses %}
  ip address {{ ip.address }}
    {%- endfor %}
    {%- if is_ospf_underlay and interface.role == "loopback" %}
  ip router ospf 1 area {{ data.dynamic_config.ospf_area }}
    {%- endif %}
  ip pim sparse-mode

  {%- endif %}
{%- endfor %}

{%- if is_ospf_underlay %}
! Configure OSPF
router ospf 1
  {%- for service in ospf_sessions %}
    {%- if service.router_id %}
  router-id {{ service.router_id.address.split('/')[0] }}
    {%- endif %}
  {%- endfor %}

{%- endif %}

! Configure underlay interfaces
{%- for interface in data.interfaces %}
  {%- if interface.typename == "DcimPhysicalInterface" and interface.role in ["ospf-unnumbered", "core"] %}
interface {{ interface.name }}
  description {{ interface.description if interface.description else "Underlay connection" }}
  no shutdown
  mtu 9216
    {%- if interface.role == "ospf-unnumbered" %}
  medium p2p
  ip unnumbered loopback0
      {%- if is_ospf_underlay %}
  ip router ospf 1 area {{ data.dynamic_config.ospf_area }}
      {%- endif %}
    {%- elif interface.role == "core" and interface.ip_addresses %}
      {%- for ip in interface.ip_addresses %}
  ip address {{ ip.address }}
      {%- endfor %}
    {%- endif %}
  ip pim sparse-mode

  {%- endif %}
{%- endfor %}

! Configure BGP
router bgp {{ local_asn }}
  router-id {{ router_id.split('/')[0] if router_id else data.dynamic_config.router_id }}
  bestpath as-path multipath-relax
  reconnect-interval 12
  address-family ipv4 unicast
    redistribute direct route-map rm-connected
    maximum-paths 64
  address-family l2vpn evpn
    nexthop route-map rm-nexthop-unchanged
    retain route-target all

{%- for service in bgp_sessions %}
  {%- if service.session_type == "EXTERNAL" %}
  ! eBGP Underlay neighbor {{ service.remote_as.asn }}
  neighbor {{ service.remote_ip.address.split('/')[0] if service.remote_ip else service.name }}
    {%- if service.remote_ip %}
    remote-as {{ service.remote_as.asn }}
    update-source {{ service.local_ip.address.split('/')[0] }}
    {%- else %}
    remote-as {{ service.remote_as.asn }}
    update-source loopback0
    {%- endif %}
    address-family ipv4 unicast
  {%- elif service.session_type == "INTERNAL" and "evpn" in service.name.lower() %}
  ! iBGP EVPN neighbor
  neighbor {{ service.remote_ip.address.split('/')[0] }}
    remote-as {{ service.remote_as.asn }}
    update-source loopback0
    address-family l2vpn evpn
      send-community extended
  {%- elif service.session_type == "INTERNAL" %}
  ! iBGP neighbor
  neighbor {{ service.remote_ip.address.split('/')[0] }}
    remote-as {{ service.remote_as.asn }}
    update-source loopback0
    address-family ipv4 unicast
  {%- endif %}
{%- endfor %}

! Configure route-maps
route-map rm-connected permit 10
  match interface loopback0
route-map rm-connected permit 20
  match interface loopback1

route-map rm-nexthop-unchanged permit 10
  set ip next-hop unchanged

! Configure PIM
ip pim rp-address {{ data.dynamic_config.pim_rp_address | default("10.254.254.254") }} group-list 224.0.0.0/4
ip pim ssm range 232.0.0.0/8

{%- set vlan_services = data.network_segments or [] %}

{%- if vlan_services %}
! Configure VLANs and VNIs
{%- for service in vlan_services %}
vlan {{ service.vni }}
  name {{ service.name }}{% if service.security_zone %} - Security Zone: {{ service.security_zone.name }}{% endif %}
  vn-segment {{ service.vni }}

interface vlan{{ service.vni }}
  description {{ service.description if service.description else service.name }}
  no shutdown
  {%- set service_vrf = None %}
  {%- for vrf in data.customer_vrfs %}
    {%- for segment in vrf.segments %}
      {%- if segment.name == service.name %}
        {%- set service_vrf = vrf %}
      {%- endif %}
    {%- endfor %}
  {%- endfor %}
  vrf member {{ service_vrf.name if service_vrf else (service.name | replace(' ', '_') | replace('-', '_')) + '_VRF' }}
  no ip redirects
  {%- for prefix in service.prefixes %}
  ip address {{ prefix.prefix.split('/')[0] }}/{{ prefix.prefix.split('/')[1] }}
  {%- endfor %}
  fabric forwarding mode anycast-gateway

{%- endfor %}

! Configure NVE interface for VXLAN
interface nve1
  no shutdown
  host-reachability protocol bgp
  source-interface loopback1
{%- for service in vlan_services %}
  member vni {{ service.vni }}
    ingress-replication protocol bgp
{%- endfor %}

! Configure EVPN
evpn
{%- for service in vlan_services %}
  vni {{ service.vni }} l2
    rd auto
    route-target import auto
    route-target export auto
{%- endfor %}

{%- if vlan_services | length > 0 %}

! Security Configuration
{%- for service in vlan_services %}

! Security configuration for {{ service.name }}
{%- if service.security_zone %}
! Security Zone: {{ service.security_zone.name }} (Trust Level: {{ service.security_zone.trust_level }})
{%- endif %}

{%- if service.access_control_lists %}
{%- for acl in service.access_control_lists %}
! ACL: {{ acl.name }} - {{ acl.description if acl.description else "Standard ACL" }}
ip access-list {{ acl.name }}
{%- if acl.rules %}
{%- for rule in acl.rules %}
  {{ rule.index }} {{ rule.action }} {% if rule.services %}{% for svc in rule.services %}{{ svc.name }}{% if not loop.last %} {% endif %}{% endfor %}{% else %}ip{% endif %} {% if rule.source_addresses %}{% for addr in rule.source_addresses %}{{ addr.name }}{% if not loop.last %} {% endif %}{% endfor %}{% else %}any{% endif %} {% if rule.destination_addresses %}{% for addr in rule.destination_addresses %}{{ addr.name }}{% if not loop.last %} {% endif %}{% endfor %}{% else %}any{% endif %}{% if rule.log %} log{% endif %}
{%- endfor %}
{%- endif %}

{%- endfor %}

! Apply ACLs to VLAN interface
interface vlan{{ service.vni }}
{%- for acl in service.access_control_lists %}
  ip access-group {{ acl.name }} {% if 'INGRESS' in acl.name %}in{% else %}out{% endif %}
{%- endfor %}

{%- endif %}

{%- if service.security_profile %}
! Security Profile: {{ service.security_profile.name }}
{%- if service.security_profile.enable_dhcp_snooping %}
! Enable DHCP Snooping
ip dhcp snooping
ip dhcp snooping vlan {{ service.vni }}
{%- endif %}

{%- if service.security_profile.enable_arp_inspection %}
! Enable ARP Inspection
ip arp inspection vlan {{ service.vni }}
{%- endif %}

{%- if service.security_profile.max_mac_addresses %}
! Port Security
interface vlan{{ service.vni }}
  switchport port-security maximum {{ service.security_profile.max_mac_addresses }}
  switchport port-security
{%- endif %}

{%- endif %}

{%- if service.enable_logging %}
! Security Logging
logging server {{ data.dynamic_config.syslog_server | default("10.0.1.100") }}
logging level 6
{%- endif %}

{%- endfor %}
{%- endif %}

{%- endif %}

! End of configuration
